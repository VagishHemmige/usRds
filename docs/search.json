[{"path":"https://vagishhemmige.github.io/usRds/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vagish Hemmige. Author, maintainer.","code":""},{"path":"https://vagishhemmige.github.io/usRds/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hemmige V (2025). usRds: package automate processes involving USRDS. R package version 0.0.0.9000, https://vagishhemmige.github.io/usRds/, https://github.com/VagishHemmige/usRds.","code":"@Manual{,   title = {usRds: A package to automate processes involving the USRDS},   author = {Vagish Hemmige},   year = {2025},   note = {R package version 0.0.0.9000, https://vagishhemmige.github.io/usRds/},   url = {https://github.com/VagishHemmige/usRds}, }"},{"path":"https://vagishhemmige.github.io/usRds/index.html","id":"usrds","dir":"","previous_headings":"","what":"A package to automate processes involving the USRDS","title":"A package to automate processes involving the USRDS","text":"prototype R package facilitate analysis United States Renal Data System using R, “usRds”. package assumes user already obtained data USRDS system, files CSV, SAS, parquet format. install package, type following R: devtools::install_github(“VagishHemmige/usRds”) need use set_USRDS_wd() function establish directory USRDS files stored: following functions used extract claims diagnosis data USRDS files: get_IN_HCPCS() — Extract inpatient claims specified HCPCS codes get_IN_ICD() — Extract inpatient claims specified ICD diagnosis codes get_PS_ICD() — Extract Physician Supplier claims ICD codes get_PS_HCPCS() — Extract Physician Supplier claims HCPCS codes function searches across supported file formats (.csv, .sas7bdat, .parquet) filters efficiently year code list. See Function Reference full documentation. Much , including help files, vignettes, etc. coming soon!","code":"library(usRds)  # Session only: set_USRDS_wd(\"C:/Path/To/USRDS\")  # Or set permanently: set_USRDS_wd(\"C:/Path/To/USRDS\", permanent = TRUE)"},{"path":"https://vagishhemmige.github.io/usRds/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A package to automate processes involving the USRDS","text":"can install development version usRds GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"VagishHemmige/usRds\")"},{"path":"https://vagishhemmige.github.io/usRds/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A package to automate processes involving the USRDS","text":"basic example shows solve common problem:","code":"library(usRds) ## basic example code"},{"path":"https://vagishhemmige.github.io/usRds/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Vagish Hemmige Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply USRDS factor labels to a data frame — apply_usrds_factors","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"Given loaded USRDS dataset corresponding file key (e.g., \"PATIENTS\", \"RXHIST\"), function uses internal metadata convert numerically coded variables factors using value mappings Appendix C USRDS Researcher's Guide.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"","code":"apply_usrds_factors(df, file_key, verbose = FALSE)"},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"df data frame loaded USRDS file. file_key Character. canonical file key (e.g., \"PATIENTS\"). verbose Logical. TRUE, print variable labeled.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"data frame factor variables applied applicable.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"Variable formats looked Appendix B. variables formats beginning dollar sign (e.g., $REMCD.) present dataset converted.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply USRDS factor labels to a data frame — apply_usrds_factors","text":"","code":"if (FALSE) { df <- load_usrds_file(\"PATIENTS\", factor_labels = TRUE) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_varlabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","title":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","text":"Adds descriptive variable labels using Appendix B USRDS Researcher's Guide. Variable labels applied using labelled package.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_varlabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","text":"","code":"apply_usrds_varlabels(df, file_key, verbose = FALSE)"},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_varlabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","text":"df data frame loaded USRDS file. file_key Character. canonical file key (e.g., \"PATIENTS\"). verbose Logical. TRUE, prints variable labeled.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_varlabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","text":"data frame variable labels added (invisible via print, viewable via labelled::var_label()).","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/apply_usrds_varlabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply USRDS variable labels to a data frame — apply_usrds_varlabels","text":"","code":"if (FALSE) { df <- load_usrds_file(\"PATIENTS\", var_labels = TRUE) labelled::var_label(df$CDEATH) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-map_USRDS_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Map USRDS data files in the working directory — .map_USRDS_files","title":"Internal: Map USRDS data files in the working directory — .map_USRDS_files","text":"Scans directory set USRDS_WD environment variable stores cleaned file list package's internal environment downstream use.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-map_USRDS_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Map USRDS data files in the working directory — .map_USRDS_files","text":"","code":".map_USRDS_files()"},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-map_USRDS_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal: Map USRDS data files in the working directory — .map_USRDS_files","text":"function intended internal use automatically run package load USRDS_WD set.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-usrds_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal environment for package-level state — .usrds_env","title":"Internal environment for package-level state — .usrds_env","text":"environment used store internal session-specific state, file list loaded map_USRDS_files(). exported accessed directly users.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-usrds_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal environment for package-level state — .usrds_env","text":"","code":".usrds_env"},{"path":"https://vagishhemmige.github.io/usRds/reference/dot-usrds_env.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal environment for package-level state — .usrds_env","text":"object class environment length 1.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_HCPCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","title":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","text":"Searches institutional claim files specified HCPCS codes specified years. Supports filtering HCPCS optionally USRDS_IDs. Handles CSV, SAS, Parquet formats.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_HCPCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","text":"","code":"get_IN_HCPCS(hcpcs_codes, years, usrds_ids = NULL)"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_HCPCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","text":"hcpcs_codes Character vector HCPCS codes search . years Integer vector years include. usrds_ids Optional vector USRDS_IDs filter specific patients.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_HCPCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","text":"data frame claims containing specified HCPCS codes.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_HCPCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Institutional HCPCS Claims — get_IN_HCPCS","text":"","code":"if (FALSE) { hcpcs_list <- c(\"J1234\", \"A4567\") get_IN_HCPCS(hcpcs_codes = hcpcs_list, years = 2012:2016) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_ICD.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","title":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","text":"Extracts claims containing specified ICD-9 ICD-10 diagnosis codes institutional billing data selected years. data may stored CSV, SAS, Parquet format. function automatically loads combines matching files can optionally filter subset USRDS_IDs.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_ICD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","text":"","code":"get_IN_ICD(icd_codes, years, usrds_ids = NULL)"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_ICD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","text":"icd_codes Character vector ICD diagnosis codes (without periods). years Integer vector calendar years include. usrds_ids Optional. Vector USRDS_IDs restrict output specific patients.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_ICD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","text":"data frame columns: USRDS_ID, CODE, CLM_FROM.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_IN_ICD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve diagnosis codes from Institutional claims — get_IN_ICD","text":"","code":"if (FALSE) { # ICD-9 and ICD-10 codes for Cryptococcosis (no periods) cryptococcus_icd <- c(\"1175\", \"B45\")  # Retrieve claims for all patients in selected years result <- get_IN_ICD(icd_codes = cryptococcus_icd, years = 2013:2018)  # Retrieve claims for specific patients result_subset <- get_IN_ICD(   icd_codes = cryptococcus_icd,   years = c(2016, 2017),   usrds_ids = c(100012345, 100078901) ) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_HCPCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","title":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","text":"Extracts claims containing specified HCPCS codes physician/supplier billing data selected years. Optionally filter list USRDS_IDs.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_HCPCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","text":"","code":"get_PS_HCPCS(hcpcs_codes, years, usrds_ids = NULL)"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_HCPCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","text":"hcpcs_codes Character vector HCPCS codes. years Integer vector calendar years include. usrds_ids Optional. Vector USRDS_IDs restrict results .","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_HCPCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","text":"data frame columns: USRDS_ID, HCPCS, CLM_FROM","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_HCPCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve HCPCS codes from Physician/Supplier claims — get_PS_HCPCS","text":"","code":"if (FALSE) { get_PS_HCPCS(c(\"81003\", \"87086\"), years = 2006:2008) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_ICD.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","title":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","text":"Extracts claims containing specified ICD-9 ICD-10 diagnosis codes physician/supplier billing data selected years. data may stored CSV, SAS, Parquet format. function automatically loads combines matching files can optionally filter subset USRDS_IDs.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_ICD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","text":"","code":"get_PS_ICD(icd_codes, years, usrds_ids = NULL)"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_ICD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","text":"icd_codes Character vector ICD diagnosis codes (without periods). years Integer vector calendar years include. usrds_ids Optional. Vector USRDS_IDs restrict output specific patients.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_ICD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","text":"data frame columns: USRDS_ID, DIAG, CLM_FROM, CLM_THRU.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_ICD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve diagnosis codes from Physician/Supplier claims — get_PS_ICD","text":"","code":"if (FALSE) { # ICD-9 and ICD-10 codes for Cryptococcosis (no periods) cryptococcus_icd <- c(\"1175\", \"B45\")  # Retrieve claims for all patients in selected years result <- get_PS_ICD(icd_codes = cryptococcus_icd, years = 2013:2018)  # Retrieve claims for specific patients result_subset <- get_PS_ICD(   icd_codes = cryptococcus_icd,   years = c(2016, 2017),   usrds_ids = c(100012345, 100078901) ) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_specialty.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PS specialty claims — get_PS_specialty","title":"Extract PS specialty claims — get_PS_specialty","text":"Returns claims filtered specialty code PS HCPCS dataset.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_specialty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PS specialty claims — get_PS_specialty","text":"","code":"get_PS_specialty(   specialtycodelist,   yearlist,   DIAG = FALSE,   HCPCS = FALSE,   PLCSRV = FALSE )"},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_specialty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PS specialty claims — get_PS_specialty","text":"specialtycodelist vector specialty codes keep. yearlist vector years include. DIAG Logical, include DIAG column. HCPCS Logical, include HCPCS column. PLCSRV Logical, include PLCSRV column.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/get_PS_specialty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract PS specialty claims — get_PS_specialty","text":"tibble filtered selected PS HCPCS data.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a USRDS file and optionally apply labels — load_usrds_file","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"function loads USRDS data file using internal registry optionally applies: Factor labels using format definitions Appendix C Variable labels using descriptions Appendix B","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"","code":"load_usrds_file(   file_key,   factor_labels = TRUE,   var_labels = FALSE,   usrds_ids = NULL,   col_select = NULL,   ... )"},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"file_key Character. File key (e.g., \"PATIENTS\", \"RXHIST\"). Case-insensitive match registered file names. factor_labels Logical. Whether apply factor labels (Appendix C). Default = TRUE. var_labels Logical. Whether apply variable labels (Appendix B). Default = FALSE. usrds_ids Optional. vector USRDS_IDs retain file. applied file contains USRDS_ID column. col_select Optional. character vector tidyselect expression selecting columns load. ... Additional arguments passed file reader (e.g., as_factor read_sas)","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"tibble contents selected file, optionally labeled factors variable descriptions.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"variable names standardized uppercase loading. col_select supports tidyselect syntax CSV SAS files, also available Parquet files (resolved automatically column names).","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/load_usrds_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a USRDS file and optionally apply labels — load_usrds_file","text":"","code":"if (FALSE) { # Load the PATIENTS file and apply factor labels (Appendix C) df <- load_usrds_file(\"PATIENTS\", factor_labels = TRUE)  # Load the RXHIST file with both factor and variable labels df <- load_usrds_file(\"RXHIST\", factor_labels = TRUE, var_labels = TRUE)  # Select only columns starting with \"CD\" (works for all file types) df <- load_usrds_file(\"PATIENTS\", col_select = dplyr::starts_with(\"CD\"))  # Load only specific columns by name df <- load_usrds_file(\"PATIENTS\", col_select = c(\"USRDS_ID\", \"CDEATH\"))  # Filter to a subset of USRDS_IDs df <- load_usrds_file(\"RXHIST\", usrds_ids = c(\"100000123\", \"100000456\")) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/map_USRDS_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Map USRDS data files in the working directory — map_USRDS_files","title":"Map USRDS data files in the working directory — map_USRDS_files","text":"Scans directory set set_USRDS_wd() identifies relevant CSV SAS files standard USRDS subdirectories. resulting file list parsed structured tibble file paths, inferred data types, years.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/map_USRDS_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map USRDS data files in the working directory — map_USRDS_files","text":"","code":"map_USRDS_files()"},{"path":"https://vagishhemmige.github.io/usRds/reference/map_USRDS_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map USRDS data files in the working directory — map_USRDS_files","text":"tibble columns: file_path, file_root, file_suffix, Year, file_directory","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/map_USRDS_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map USRDS data files in the working directory — map_USRDS_files","text":"function populates global variable .File_List_clean downstream use data extraction functions.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/map_USRDS_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map USRDS data files in the working directory — map_USRDS_files","text":"","code":"if (FALSE) { set_USRDS_wd(\"C:/path/to/usrds\") file_map <- map_USRDS_files() head(file_map) }"},{"path":"https://vagishhemmige.github.io/usRds/reference/set_USRDS_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the USRDS working directory — set_USRDS_wd","title":"Set the USRDS working directory — set_USRDS_wd","text":"Sets USRDS working directory current session, optionally saves permanently user's .Renviron file environment variable USRDS_WD.","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/set_USRDS_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the USRDS working directory — set_USRDS_wd","text":"","code":"set_USRDS_wd(path, permanent = FALSE)"},{"path":"https://vagishhemmige.github.io/usRds/reference/set_USRDS_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the USRDS working directory — set_USRDS_wd","text":"path Path USRDS data folder permanent Logical; TRUE, appends setting .Renviron persistence","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/set_USRDS_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the USRDS working directory — set_USRDS_wd","text":"normalized path, invisibly","code":""},{"path":"https://vagishhemmige.github.io/usRds/reference/set_USRDS_wd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the USRDS working directory — set_USRDS_wd","text":"","code":"if (FALSE) { set_USRDS_wd(\"C:/Data/USRDS\")          # Session only set_USRDS_wd(\"C:/Data/USRDS\", TRUE)    # Persistent across sessions }"},{"path":"https://vagishhemmige.github.io/usRds/reference/usRds-package.html","id":null,"dir":"Reference","previous_headings":"","what":"usRds: A package to automate processes involving the USRDS — usRds-package","title":"usRds: A package to automate processes involving the USRDS — usRds-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://vagishhemmige.github.io/usRds/reference/usRds-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"usRds: A package to automate processes involving the USRDS — usRds-package","text":"Maintainer: Vagish Hemmige vahemmig@montefiore.org","code":""}]
